[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\tangu\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\tangu\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.9 (Oracle Corporation Java 22)
[debug] Load.defaultLoad until apply took 65.3753ms
[debug]           Load.loadUnit: plugins took 46.9007ms
[debug]           Load.loadUnit: defsScala took 0.1972ms
[debug] [Loading] Scanning directory C:\Users\tangu\OneDrive\01 UNI\01 Sommersemester 24\SE\Scrabble\Scrabble\project
[debug]             Load.loadUnit: mkEval took 4.5831ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\tangu\OneDrive\01 UNI\01 Sommersemester 24\SE\Scrabble\Scrabble\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 11.4192 ms
[info] loading settings for project scrabble-build from idea.sbt ...
[debug]               Load.resolveProject(scrabble-build) took 29.0961ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scrabble-build, base: C:\Users\tangu\OneDrive\01 UNI\01 Sommersemester 24\SE\Scrabble\Scrabble\project, plugins: List(<none>))) took 46.3625ms
[debug] [Loading] Done in C:\Users\tangu\OneDrive\01 UNI\01 Sommersemester 24\SE\Scrabble\Scrabble\project, returning: (scrabble-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1784.0439ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.6022ms
[debug]         Load.loadUnit(file:/C:/Users/tangu/OneDrive/01%20UNI/01%20Sommersemester%2024/SE/Scrabble/Scrabble/project/, ...) took 1841.6342ms
[debug]       Load.apply: load took 1942.3399ms
[debug]       Load.apply: resolveProjects took 3.1004ms
[debug]       Load.apply: finalTransforms took 36.0143ms
[debug]       Load.apply: config.delegates took 3.973ms
[debug]       Load.apply: Def.make(settings)... took 221.6917ms
[debug]       Load.apply: structureIndex took 53.6261ms
[debug]       Load.apply: mkStreams took 0.8485ms
[info] loading project definition from C:\Users\tangu\OneDrive\01 UNI\01 Sommersemester 24\SE\Scrabble\Scrabble\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3626.3456ms
[debug]     Load.loadUnit: defsScala took 0.0018ms
[debug] [Loading] Scanning directory C:\Users\tangu\OneDrive\01 UNI\01 Sommersemester 24\SE\Scrabble\Scrabble
[debug]       Load.loadUnit: mkEval took 0.172ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.5853 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 17.1178ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\tangu\OneDrive\01 UNI\01 Sommersemester 24\SE\Scrabble\Scrabble, plugins: List(<none>))) took 19.7173ms
[debug] [Loading] Done in C:\Users\tangu\OneDrive\01 UNI\01 Sommersemester 24\SE\Scrabble\Scrabble, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 699.7307ms
[debug]     Load.loadUnit: cleanEvalClasses took 18.1892ms
[debug]   Load.loadUnit(file:/C:/Users/tangu/OneDrive/01%20UNI/01%20Sommersemester%2024/SE/Scrabble/Scrabble/, ...) took 4345.618ms
[debug] Load.apply: load took 4359.1585ms
[debug] Load.apply: resolveProjects took 0.1417ms
[debug] Load.apply: finalTransforms took 22.2045ms
[debug] Load.apply: config.delegates took 0.2518ms
[debug] Load.apply: Def.make(settings)... took 55.1285ms
[debug] Load.apply: structureIndex took 17.3997ms
[debug] Load.apply: mkStreams took 0.0017ms
[info] set current project to Scrabble (in build file:/C:/Users/tangu/OneDrive/01%20UNI/01%20Sommersemester%2024/SE/Scrabble/Scrabble/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 56341 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 56341, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Scrabble (in build file:/C:/Users/tangu/OneDrive/01%20UNI/01%20Sommersemester%2024/SE/Scrabble/Scrabble/)
[debug] > Exec(idea-shell, None, None)
